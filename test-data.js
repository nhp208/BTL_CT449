const { MongoClient } = require('mongodb');

const uri = "mongodb://localhost:27017";
const client = new MongoClient(uri);

async function addTestData() {
  try {
    await client.connect();
    console.log("‚úÖ K·∫øt n·ªëi MongoDB th√†nh c√¥ng");
    
    const db = client.db("library");
    
    // X√≥a d·ªØ li·ªáu c≈© trong theodoimuonsach
    await db.collection('theodoimuonsach').deleteMany({});
    console.log("üóëÔ∏è ƒê√£ x√≥a d·ªØ li·ªáu c≈©");
    
    // Th√™m d·ªØ li·ªáu test
    const testData = [
      // D·ªØ li·ªáu b√¨nh th∆∞·ªùng
      { MaDocGia: 'DG001', MaSach: 'S001', NgayMuon: '2024-01-15', NgayTra: '2024-02-15', TrangThai: 'ƒê√£ tr·∫£' },
      { MaDocGia: 'DG002', MaSach: 'S002', NgayMuon: '2024-02-01', NgayTra: null, TrangThai: 'ƒêang m∆∞·ª£n' },
      { MaDocGia: 'DG001', MaSach: 'S003', NgayMuon: '2024-01-01', NgayTra: '2024-02-20', TrangThai: 'ƒê√£ tr·∫£' },
      
      // D·ªØ li·ªáu test ph·∫°t qu√° h·∫°n
      { MaDocGia: 'DG001', MaSach: 'S002', NgayMuon: '2023-12-01', NgayTra: '2024-02-01', TrangThai: 'ƒê√£ tr·∫£' }, // Qu√° h·∫°n 32 ng√†y
      { MaDocGia: 'DG002', MaSach: 'S003', NgayMuon: '2023-11-15', NgayTra: null, TrangThai: 'Qu√° h·∫°n' }, // Qu√° h·∫°n 45+ ng√†y
      { MaDocGia: 'DG001', MaSach: 'S001', NgayMuon: '2024-01-20', NgayTra: null, TrangThai: 'ƒêang m∆∞·ª£n' }, // Ch∆∞a qu√° h·∫°n
      { MaDocGia: 'DG002', MaSach: 'S002', NgayMuon: '2024-02-15', NgayTra: null, TrangThai: 'Ch·ªù duy·ªát' }, // Ch·ªù duy·ªát
      
      // Th√™m d·ªØ li·ªáu test qu√° h·∫°n kh√°c
      { MaDocGia: 'DG001', MaSach: 'S003', NgayMuon: '2023-10-01', NgayTra: '2024-01-15', TrangThai: 'ƒê√£ tr·∫£' }, // Qu√° h·∫°n 75 ng√†y
      { MaDocGia: 'DG002', MaSach: 'S001', NgayMuon: '2023-09-15', NgayTra: null, TrangThai: 'Qu√° h·∫°n' }, // Qu√° h·∫°n 90+ ng√†y
    ];
    
    await db.collection('theodoimuonsach').insertMany(testData);
    console.log("‚úÖ ƒê√£ th√™m d·ªØ li·ªáu test th√†nh c√¥ng");
    
    // Hi·ªÉn th·ªã d·ªØ li·ªáu ƒë√£ th√™m
    const allBorrows = await db.collection('theodoimuonsach').find({}).toArray();
    console.log("\nüìã D·ªØ li·ªáu test ƒë√£ th√™m:");
    allBorrows.forEach((borrow, index) => {
      const borrowDate = new Date(borrow.NgayMuon);
      const today = new Date();
      const diffDays = Math.ceil((today - borrowDate) / (1000 * 60 * 60 * 24));
      const overdueDays = Math.max(0, diffDays - 30);
      
      console.log(`${index + 1}. ${borrow.MaDocGia} - ${borrow.MaSach}: ${borrow.TrangThai}`);
      console.log(`   Ng√†y m∆∞·ª£n: ${borrow.NgayMuon}, Ng√†y tr·∫£: ${borrow.NgayTra || 'Ch∆∞a tr·∫£'}`);
      console.log(`   S·ªë ng√†y m∆∞·ª£n: ${diffDays}, Qu√° h·∫°n: ${overdueDays} ng√†y`);
      console.log(`   Ph·∫°t d·ª± ki·∫øn: ${overdueDays * 5000} VNƒê\n`);
    });
    
  } catch (error) {
    console.error("‚ùå L·ªói:", error);
  } finally {
    await client.close();
  }
}

addTestData(); 